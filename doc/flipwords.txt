
Flipwords						*flipwords*

The plugin Flipwords provides the command Flip that changes the order of two 
delimited words on a single line.


:Flip [delimiter] [end-delimiter]			*:Flip*
			Flip two delimited words on a single line. The command 
			accepts 0, 1 or 2 paramteres.

			The parameter [delimiter] is the regex that separates 
			the words.  When omitted it defaults to "\s\+".  The 
			comand tries to preserve the whitespace around the 
			delimiter.

			The parameter [end-delimiter] is the regex that ends 
			the second word.  It is not part of the word.  When 
			omitted it is the same as [delimiter].  When the 
			[end-delimiter] is not found on the line the end of 
			line is used instead.

Options: 						*flipword-options*

To change an option add a |let| statement in your |vimrc|. First check that the 
dictionary for flipword settings is created and then set the option in the 
dictionary. Example: >
    let g:plug_flipwords = get(g:, 'plug_flipwords', {})
    let g:plug_flipwords.move_cursor = 1
<

OPTIONS AND DEFAULTS ~

g:plug_flipwords.move_cursor = 0

    0 : The cursor remains in the initial position after the words are flipped.

    1 : The cursor moves with the current word.


Examples:						*flipword-examples*
>
  Flip			- flip two white-space delimited words
  Flip ,		- flip two items in a comma-delimited list 
  Flip , )		- flip last two parameters (nested parens are not handled)
  Flip = ;		- flip two words delimited by '=' and ';' (c assignment)
  Flip = )\zs		- flip two words delimited by '=' where the second 
  			  word ends with and includes ')'
<
Here are some effects of the Flip command. The coursor is at the character 
following '|':
>
  ~~ let |b = a
  :Flip =
  ~~ let |a = b

  ~~ call doThis(|"one", "two", "three")
  :Flip ,
  ~~ call doThis(|"two", "one", "three")

  ~~ call doThis("one", |"two", "three")
  :Flip ,
  ~~ call doThis("one", |"three"), "two"

  ~~ call doThis("one", |"two", "three")
  :Flip , )
  ~~ call doThis("one", |"three", "two")

  ~~ if |result == getValue() " some comment
  :Flip == )\zs
  ~~ if |getValue() == result " some comment
<
